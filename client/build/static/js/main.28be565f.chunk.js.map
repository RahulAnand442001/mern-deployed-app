{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","title","genre","year","movies","setMovies","movie","setMovie","useEffect","fetch","then","res","ok","json","jsonRes","handleChange","e","target","name","value","prevInput","className","action","type","placeholder","onChange","onClick","preventDefault","newMovie","axios","post","map","id","_id","delete","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPA6FeA,MAzFf,WAAgB,IAAD,EACeC,mBAAS,CACnC,CACEC,MAAO,GACPC,MAAO,GACPC,KAAM,MALG,mBACNC,EADM,KACEC,EADF,OAQaL,mBAAS,CACjCC,MAAO,GACPC,MAAO,GACPC,KAAM,KAXK,mBAQNG,EARM,KAQCC,EARD,KAcbC,qBAAU,WACRC,MAAM,WACHC,MAAK,SAACC,GACL,GAAIA,EAAIC,GACN,OAAOD,EAAIE,UAGdH,MAAK,SAACI,GAAD,OAAaT,EAAUS,SAGjC,IAAMC,EAAe,SAACC,GAAO,IAAD,EACFA,EAAEC,OAAlBC,EADkB,EAClBA,KAAMC,EADY,EACZA,MACdZ,GAAS,SAACa,GACR,OAAO,2BACFA,GADL,kBAEGF,EAAOC,QAmBd,OACE,sBAAKE,UAAU,MAAf,UACE,2CACA,uBAAMC,OAAO,GAAb,UACE,uBACEC,KAAK,OACLC,YAAY,QACZN,KAAK,QACLO,SAAUV,EACVI,MAAOb,EAAML,QAEf,uBACEsB,KAAK,OACLC,YAAY,QACZN,KAAK,QACLO,SAAUV,EACVI,MAAOb,EAAMJ,QAEf,uBACEqB,KAAK,OACLC,YAAY,OACZN,KAAK,OACLO,SAAUV,EACVI,MAAOb,EAAMH,OAEf,wBAAQuB,QAvCG,SAACV,GAChBA,EAAEW,iBACF,IAAMC,EAAW,CACf3B,MAAOK,EAAML,MACbC,MAAOI,EAAMJ,MACbC,KAAMG,EAAMH,MAEd0B,IAAMC,KAAK,YAAaF,IAgCpB,0BAEDxB,EAAO2B,KAAI,SAACzB,GACX,OACE,qCACE,6BAAKA,EAAML,QACX,4BAAIK,EAAMJ,QACV,4BAAII,EAAMH,OACV,wBAAQuB,QAAS,kBArCNM,EAqCwB1B,EAAM2B,SApCjDJ,IAAMK,OAAO,gBAAkBF,GADb,IAACA,GAqCX,8BCzEGG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.28be565f.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [movies, setMovies] = useState([\n    {\n      title: \"\",\n      genre: \"\",\n      year: \"\",\n    },\n  ]);\n  const [movie, setMovie] = useState({\n    title: \"\",\n    genre: \"\",\n    year: \"\",\n  });\n\n  useEffect(() => {\n    fetch(\"/movies\")\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n      })\n      .then((jsonRes) => setMovies(jsonRes));\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setMovie((prevInput) => {\n      return {\n        ...prevInput,\n        [name]: value,\n      };\n    });\n  };\n\n  const addMovie = (e) => {\n    e.preventDefault();\n    const newMovie = {\n      title: movie.title,\n      genre: movie.genre,\n      year: movie.year,\n    };\n    axios.post(\"/newMovie\", newMovie);\n  };\n\n  const deleteMovie = (id) => {\n    axios.delete(\"/deleteMovie/\" + id);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>ADD MOVIE</h1>\n      <form action=\"\">\n        <input\n          type=\"text\"\n          placeholder=\"title\"\n          name=\"title\"\n          onChange={handleChange}\n          value={movie.title}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"genre\"\n          name=\"genre\"\n          onChange={handleChange}\n          value={movie.genre}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"year\"\n          name=\"year\"\n          onChange={handleChange}\n          value={movie.year}\n        />\n        <button onClick={addMovie}>ADD MOVIE</button>\n      </form>\n      {movies.map((movie) => {\n        return (\n          <>\n            <h1>{movie.title}</h1>\n            <p>{movie.genre}</p>\n            <p>{movie.year}</p>\n            <button onClick={() => deleteMovie(movie._id)}>DELETE</button>\n          </>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}